<%- include('partials/header') %>
<div class="container">
  <!-- Breadcrumb Navigation -->
  <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/logs" class="text-decoration-none">Logs</a></li>
      <li class="breadcrumb-item active" aria-current="page">Entradas dos Alunos</li>
    </ol>
  </nav>

  <!-- LOGS -->
  <div class="card shadow-sm mb-4">
    <div class="card-body">
      <!-- Page Title -->
      <h2 class="card-title text-center mb-4">
        Logs de Entradas dos Alunos
      </h2>

      <!-- Filter Options -->
      <div class="row mb-4">
        <!-- Filter by Name -->
        <div class="col-md-6 mb-3">
          <label for="filterName" class="form-label">Filtrar por Nome</label>
          <input type="text" class="form-control" id="filterName" placeholder="Digite o nome do aluno">
        </div>
        <!-- Filter by Date -->
        <div class="col-md-6 mb-3">
          <label for="filterDate" class="form-label">Filtrar por Data</label>
          <input type="date" class="form-control" id="filterDate">
        </div>
      </div>

      <!-- Tabela de Logs -->
      <div class="table-responsive">
        <table class="table table-striped table-hover" id="logsTable">
          <thead class="table-dark">
            <tr>
              <th>Nome do Aluno</th>
              <th>Horário de Entrada</th>
            </tr>
          </thead>
          <tbody id="logsTableBody">
            <% if (logs && logs.length > 0) { %>
              <% logs.forEach(function(log) { %>
                <tr>
                  <td class="log-name"><%= log.name %></td>
                  <td class="log-timestamp"><%= new Date(log.timestamp).toLocaleString() %></td>
                </tr>
              <% }); %>
            <% } else { %>
              <tr>
                <td colspan="2" class="text-center">Nenhum log encontrado.</td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Lógica de Filtro dos Registros -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const filterNameInput = document.getElementById('filterName');
    const filterDateInput = document.getElementById('filterDate');
    const logsTableBody = document.getElementById('logsTableBody');
    const logsRows = logsTableBody.getElementsByTagName('tr');

    // Function to format timestamp to YYYY-MM-DD for comparison
    function formatDate(timestamp) {
      const date = new Date(timestamp);
      const year = date.getFullYear();
      const month = ('0' + (date.getMonth() + 1)).slice(-2);
      const day = ('0' + date.getDate()).slice(-2);
      return `${year}-${month}-${day}`;
    }

    // Function to filter logs
    function filterLogs() {
      const filterName = filterNameInput.value.toLowerCase();
      const filterDate = filterDateInput.value;

      for (let i = 0; i < logsRows.length; i++) {
        const row = logsRows[i];
        const nameCell = row.querySelector('.log-name');
        const timestampCell = row.querySelector('.log-timestamp');

        if (nameCell && timestampCell) {
          const nameText = nameCell.textContent.toLowerCase();
          const timestampText = new Date(timestampCell.textContent).toISOString();

          const rowDate = formatDate(timestampText);

          // Check if the row matches the filter criteria
          const matchesName = nameText.includes(filterName);
          const matchesDate = filterDate ? rowDate === filterDate : true;

          // Show or hide the row based on the filter
          if (matchesName && matchesDate) {
            row.style.display = '';
          } else {
            row.style.display = 'none';
          }
        }
      }

      // If no rows are visible after filtering, show the 'no logs' message
      let anyVisible = false;
      for (let i = 0; i < logsRows.length; i++) {
        if (logsRows[i].style.display !== 'none') {
          anyVisible = true;
          break;
        }
      }

      // Handle the 'no logs' row visibility
      const noLogsRow = logsTableBody.querySelector('tr td[colspan="2"]');
      if (noLogsRow) {
        if (anyVisible) {
          noLogsRow.parentElement.style.display = 'none';
        } else {
          noLogsRow.parentElement.style.display = '';
        }
      }
    }

    // Event listeners for filter inputs
    filterNameInput.addEventListener('input', filterLogs);
    filterDateInput.addEventListener('change', filterLogs);
  });
</script>

<!-- Include Bootstrap and Axios JS -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</body>
</html>
